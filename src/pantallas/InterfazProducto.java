/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pantallas;

import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import logica.Producto;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Cliente;
import logica.Proveedores;
import logica.Recibo;
import static pantallas.InterfazCliente.clientes;

public class InterfazProducto extends javax.swing.JFrame {

    public static LinkedList<Producto> productos = new LinkedList();
    public static LinkedList<Recibo> recibos = new LinkedList();
    Proveedores[] proveedorNombre = Proveedores.values();
    // Es el modelo que tendra la tabla
    DefaultTableModel modeloTabla = new DefaultTableModel();
    String estado = "crear";
    int i = 0;
    int t = 0;

    private void listar() {
        // Reinicia las filas
        modeloTabla.setRowCount(0);
        // Crea un objeto con el numero de columnas que esten iniciadas
        Object[] datos = new Object[tablita.getColumnCount()];

        // En este for mete los datos traidos del Arreglo clientes
        tablita.removeAll();
        Collections.sort(productos, (Producto p1, Producto p2) -> p1.getNombre().compareTo(p2.getNombre())
        );

        for (Producto prod : InterfazProducto.productos)
        {
            // En el caso de que el arreglo exista el producto se inserta en el Object datos
            if (prod != null)
            {
                datos[0] = prod.getNombre();
                datos[1] = prod.getPrecio();
                datos[2] = prod.getStock();
                datos[3] = prod.getProveedor();
                modeloTabla.addRow(datos);
            }
        }
        // Actualiza la tabla
        tablita.setModel(modeloTabla);
    }

    private void limpiar() {
        // Esta parte es para vaciar los jTextField
        precio.setText("");
        nombre.setText("");
        stock.setText("");

    }

    private void setModelo() {
        // Metemos los valores que queremos que aparezca en la tabla
        String[] cabeceraTabla =
        {
            "Nombre", "Precio", "Stock", "Proveedor"
        };
        // Actualizamos la cabecera
        modeloTabla.setColumnIdentifiers(cabeceraTabla);

        // Actualizamos la tabla
        tablita.setModel(modeloTabla);

    }

    private void listarProveedor() {
        jComboBoxProveedor.removeAllItems();
        for (int t = 0; i < proveedorNombre.length; i++)
        {
            jComboBoxProveedor.addItem(proveedorNombre[i].getNombre());

        }
    }

    /**
     * Creates new form PantallaProducto
     */
    public InterfazProducto() {
        initComponents();
        this.setLocationRelativeTo(null);
        setModelo();
        listar();
        listarProveedor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablita = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        nombre = new javax.swing.JTextField();
        stock = new javax.swing.JTextField();
        precio = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBoxProveedor = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxHistorial = new javax.swing.JComboBox<>();
        jButtonHistorial = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        tablita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "nombre", "precio", "stock", "proveedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablita.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        tablita.setAutoscrolls(false);
        tablita.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tablita);

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Seleccionar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Abastecer");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(131, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        nombre.setBorder(javax.swing.BorderFactory.createTitledBorder("nombre"));
        nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreKeyTyped(evt);
            }
        });

        stock.setBorder(javax.swing.BorderFactory.createTitledBorder("stock"));
        stock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                stockKeyTyped(evt);
            }
        });

        precio.setBorder(javax.swing.BorderFactory.createTitledBorder("precio"));
        precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precioActionPerformed(evt);
            }
        });
        precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                precioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precioKeyTyped(evt);
            }
        });

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Enviar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBoxProveedor.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        jComboBoxProveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Proveedor" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel6.setText("Producto");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(365, 365, 365)
                .addComponent(jLabel6)
                .addContainerGap(373, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel6)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jComboBoxHistorial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Historial" }));

        jButtonHistorial.setText("Historial de recibos");
        jButtonHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHistorialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jComboBoxHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jButtonHistorial)))
                .addGap(32, 32, 32))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonHistorial)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean isCamposVacios() {
        return nombre.getText().isEmpty() || precio.getText().isEmpty() || stock.getText().isEmpty();
    }

    private boolean isNombreProductoExiste() {
        String proveedorseleccionado = (String) jComboBoxProveedor.getSelectedItem();
        boolean NombreRepetido = false;
        for (Producto pr : InterfazProducto.productos)
        {
            if (pr.getNombre().equals(nombre.getText().toUpperCase()) && (pr.getProveedor().equals(proveedorseleccionado)))
            {
                NombreRepetido = true;
            } else
            {
                NombreRepetido = false;
            }
        }
        return NombreRepetido;
    }

    public void condicionProveedor() {

    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if (estado.equals("crear"))
        {

            if (isCamposVacios())
            {
                JOptionPane.showMessageDialog(rootPane, "Llene los campos vacios", "Campos Vacios", JOptionPane.ERROR_MESSAGE);
            } else if (isNombreProductoExiste())
            {
                JOptionPane.showMessageDialog(rootPane, "Ya existe el producto con el mismo nombre", "Nombre Duplicado", JOptionPane.ERROR_MESSAGE);
            } else
            {
                // Agrega un  producto al arreglo de productos
                String proveedorseleccionado = (String) jComboBoxProveedor.getSelectedItem();
                for (Proveedores rp : Proveedores.values())
                {
                    if (Integer.parseInt(stock.getText()) < Proveedores.valueOf(proveedorseleccionado).getCantidad())
                    {

                        stock.setText(String.valueOf(Proveedores.valueOf(proveedorseleccionado).getCantidad()));

                    }

                }
                precio.setText(String.valueOf(Double.parseDouble(precio.getText()) - (Double.parseDouble(precio.getText())) * Proveedores.valueOf(proveedorseleccionado).getDes()));
                JOptionPane.showMessageDialog(this, "El proveedor " + Proveedores.valueOf(proveedorseleccionado).getNombre() + " de " + Proveedores.valueOf(proveedorseleccionado).getLugar() + " \n debe abastecer hasta " + Proveedores.valueOf(proveedorseleccionado).getCantidad() + " medicamentos" + " y aplica un descuento al precio de " + Proveedores.valueOf(proveedorseleccionado).getDes());
                InterfazProducto.recibos.add(new Recibo(proveedorseleccionado, nombre.getText()));
                JOptionPane.showMessageDialog(this, recibos.get(recibos.size() - 1));
                InterfazProducto.productos.add(new Producto(i, nombre.getText().toUpperCase(), Double.parseDouble(precio.getText()), Integer.parseInt(stock.getText()), proveedorseleccionado));
                limpiar();

            }

        } else
        {
            if (isCamposVacios())
            {
                JOptionPane.showMessageDialog(rootPane, "Llene los campos vacios", "Campos Vacios", JOptionPane.ERROR_MESSAGE);
            } else
            {
                String proveedorseleccionado = (String) jComboBoxProveedor.getSelectedItem();
                for (Proveedores rp : Proveedores.values())
                {
                    if (Integer.parseInt(stock.getText()) < Proveedores.valueOf(proveedorseleccionado).getCantidad())
                    {

                        stock.setText(String.valueOf(Proveedores.valueOf(proveedorseleccionado).getCantidad()));

                    }

                }

                // Trae el indice de la lista del Producto
                int j = tablita.getSelectedRow();
                // Obtengo el Producto
                Producto productoActualizar = productos.get(j);
                productoActualizar.setNombre(nombre.getText());
                productoActualizar.setStock(Integer.parseInt(stock.getText()));
                productoActualizar.setPrecio(Double.parseDouble(precio.getText()));

                limpiar();
                estado = "crear";
                tablita.setEnabled(true);
            }
        }

        // Este metodo nos permite refrescar la tabla
        listar();
        i++;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void precioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioKeyReleased
    }//GEN-LAST:event_precioKeyReleased

    private void precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precioActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int j = tablita.getSelectedRow();
        if (j > -1)
        {
            // Elimina de la lista de productos
            productos.remove(j);
            // refresca la tabla
            this.listar();
        } else
        {
            // Error en el caso de que no haya seleccionado un producto
            JOptionPane.showMessageDialog(rootPane, "Elija un Producto", "Producto no seleccionado", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        tablita.setEnabled(false);
        // Trae el indice de la lista del Producto
        int j = tablita.getSelectedRow();
        if (j > -1)
        {
            // Obtengo el Producto
            Producto productoActualizar = productos.get(j);
            // Se pone los valores en los TextInputs
            nombre.setText(productoActualizar.getNombre());
            precio.setText(String.valueOf(productoActualizar.getPrecio()));
            stock.setText(String.valueOf(productoActualizar.getStock()));

            estado = "actualizar";
        } else
        {
            // Error en el caso de que no haya seleccionado un producto
            JOptionPane.showMessageDialog(rootPane, "Elija un Producto", "Producto no seleccionado", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreKeyTyped
        char validar = evt.getKeyChar();
        if (Character.isDigit(validar))
        {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar solo Letras");
        }

        // En el caso de que lo que digitamos sea digito salta un Dialog en pantalla(Ingresar solo letras)

    }//GEN-LAST:event_nombreKeyTyped

    private void precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioKeyTyped
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar))
        {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar solo numeros");
        }
    }//GEN-LAST:event_precioKeyTyped

    private void stockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stockKeyTyped
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar))
        {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar solo numeros");
        }
    }//GEN-LAST:event_stockKeyTyped

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int index = tablita.getSelectedRow();
        if (index > -1)
        {
            String cantidadProducto = JOptionPane.showInputDialog(rootPane, "Ingrese la cantidad", "Orden de Compra Producto", JOptionPane.INFORMATION_MESSAGE);
            // Es para conocer si son digitos o palabras
            if (cantidadProducto.matches("[+-]?\\d*(\\.\\d+)?"))
            {
                InterfazProducto.productos.get(index).comprar(Integer.parseInt(cantidadProducto));
                this.listar();

            } else
            {
                JOptionPane.showMessageDialog(rootPane, "Ingrese una cantidad valida", "Cantidad invalida", HEIGHT);

            }
        } else
        {
            // Error en el caso de que no haya seleccionado un producto
            JOptionPane.showMessageDialog(rootPane, "Elija un Producto", "Producto no seleccionado", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        InterfazVentas p = new InterfazVentas();
        p.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHistorialActionPerformed
        // TODO add your handling code here:
        jComboBoxHistorial.removeAllItems();
        Collections.sort(recibos, (Recibo re1, Recibo re2) -> re1.getProveedor().compareTo(re2.getProveedor())
        );
        for (Recibo re : recibos)
        {

            jComboBoxHistorial.addItem(re.info());

        }
    }//GEN-LAST:event_jButtonHistorialActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(InterfazProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(InterfazProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(InterfazProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(InterfazProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonHistorial;
    private javax.swing.JComboBox<String> jComboBoxHistorial;
    private javax.swing.JComboBox<String> jComboBoxProveedor;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField precio;
    private javax.swing.JTextField stock;
    private javax.swing.JTable tablita;
    // End of variables declaration//GEN-END:variables
}
