/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pantallas;

import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import logica.Cliente;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class InterfazCliente extends javax.swing.JFrame {

    //List<Cliente>  clientes = new ArrayList();
    public static LinkedList<Cliente> clientes = new LinkedList();
    // Es el modelo que tendra la tabla
    DefaultTableModel modeloTabla = new DefaultTableModel();
    String estado = "crear";
    int i = 0;
    int numero, suma, resta, resultado = 0;
    public int buscar;

    private void listar() {
        // Reinicia las filas

        modeloTabla.setRowCount(0);
        Object[] datos = new Object[tablita.getColumnCount()];

        Collections.sort(clientes, (Cliente c1, Cliente c2) -> c1.getNombre().compareTo(c2.getNombre())
        );
        for (Cliente cliente : clientes)
        {

            if (cliente != null)
            {
                datos[0] = cliente.getCedula();
                datos[1] = cliente.getNombre();
                datos[2] = cliente.getTelefono();
                datos[3] = cliente.getDireccion();
                modeloTabla.addRow(datos);
            }
        }
        // Actualiza la tabla
        tablita.setModel(modeloTabla);
    }

    private void setModelo() {
        // Metemos los valores que queremos que aparezca en la tabla
        String[] cabeceraTabla =
        {
            "Cedula", "Nombre", "Telefono", "Direccion"
        };
        // Actualizamos la cabecera
        modeloTabla.setColumnIdentifiers(cabeceraTabla);

        // Actualizamos la tabla
        tablita.setModel(modeloTabla);

    }

    private void limpiar() {
        cedula.setText("");
        nombre.setText("");
        telefono.setText("");
        direccion.setText("");
    }

    /**
     * Creates new form PantallaProducto
     */
    public InterfazCliente() {
        initComponents();
        this.setLocationRelativeTo(null);
        setModelo();
        listar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablita = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        nombre = new javax.swing.JTextField();
        telefono = new javax.swing.JTextField();
        cedula = new javax.swing.JTextField();
        direccion = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        tablita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "cedula", "nombre", "telefono", "direccion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablita.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        tablita.setAutoscrolls(false);
        tablita.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tablita);

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Seleccionar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setText("Terminar Consulta");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(238, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addGap(6, 6, 6))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        nombre.setBorder(javax.swing.BorderFactory.createTitledBorder("nombre"));
        nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreKeyTyped(evt);
            }
        });

        telefono.setBorder(javax.swing.BorderFactory.createTitledBorder("telefono"));
        telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                telefonoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                telefonoKeyTyped(evt);
            }
        });

        cedula.setBorder(javax.swing.BorderFactory.createTitledBorder("cedula"));
        cedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaActionPerformed(evt);
            }
        });
        cedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cedulaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cedulaKeyTyped(evt);
            }
        });

        direccion.setBorder(javax.swing.BorderFactory.createTitledBorder("direccion"));

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Enviar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cedula, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel6.setText("Cliente");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(380, 380, 380)
                .addComponent(jLabel6)
                .addContainerGap(388, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel6)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean isCamposVacios() {
        return nombre.getText().isEmpty() && cedula.getText().isEmpty() && direccion.getText().isEmpty() && telefono.getText().isEmpty();
    }

    private boolean isCedulaExiste() {
        boolean estadoNombre = false;
        for (Cliente pr : clientes)
        {
            if (pr.getCedula().equals(cedula.getText()))
            {
                estadoNombre = true;
            }
        }
        return estadoNombre;
    }

    private void cedulaEcuatoria(String cel) {
        for (int c = 0; c < cel.length() - 1; c++)
        {
            numero = Integer.parseInt(String.valueOf(cel.charAt(c)));
            if (c % 2 == 0)
            {
                numero = numero * 2;
                if (numero > 9)
                {
                    numero = numero - 9;
                }
            }
            suma = suma + numero;
        }
        if (suma % 10 != 0)
        {
            resultado = ((suma / 10) + 1) * 10;
            resta = resultado - suma;
            int ultimo = Integer.parseInt(String.valueOf(cel.charAt(9)));
            if (ultimo == resta)
            {
                JOptionPane.showMessageDialog(this, "Cedula Ecuatoriana Verificada");
            } else
            {
                JOptionPane.showMessageDialog(this, "Cedula  no Ecuatoriana ");
            }
        }
        numero = 0;
        suma = 0;
        resta = 0;
        resultado = 0;

    }


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Agrega el cliente al arreglo de clientes

        if (estado.equals("crear"))
        {

            if (isCamposVacios())
            {
                JOptionPane.showMessageDialog(rootPane, "Llene los campos vacios", "Campos Vacios", JOptionPane.ERROR_MESSAGE);
            } else if (isCedulaExiste())
            {
                JOptionPane.showMessageDialog(rootPane, "Ya existe un cliente con la misma cedula", "Cedula Duplicada", JOptionPane.ERROR_MESSAGE);
            } else if (cedula.getText().length() < 10)
            {
                JOptionPane.showMessageDialog(rootPane, "Su cedula tiene menos de 10 digitos ", "Menos numeros", JOptionPane.ERROR_MESSAGE);
            } else if (telefono.getText().length() < 10)
            {
                JOptionPane.showMessageDialog(rootPane, "Su telefono tiene menos de 10 digitos ", "Menos numeros", JOptionPane.ERROR_MESSAGE);
            } else if (Integer.parseInt(String.valueOf(telefono.getText().charAt(0))) != 0 && Integer.parseInt(String.valueOf(telefono.getText().charAt(1))) != 9)
            {
                JOptionPane.showMessageDialog(rootPane, "Su telefono tiene que ser celular ", "Telefono no valido", JOptionPane.ERROR_MESSAGE);
            } else
            {

                // Agrega un  producto al arreglo de productos
                String cel = cedula.getText();
                cedulaEcuatoria(cel);
                String tel = telefono.getText();

                clientes.add(new Cliente(cedula.getText(), nombre.getText(), telefono.getText(), direccion.getText()));
                limpiar();

            }
        } else if (isCamposVacios())
        {
            JOptionPane.showMessageDialog(rootPane, "Llene los campos vacios", "Campos Vacios", JOptionPane.ERROR_MESSAGE);
        } else if (cedula.getText().length() < 10)
        {
            JOptionPane.showMessageDialog(rootPane, "Su cedula tiene menos de 10 digitos ", "Menos numeros", JOptionPane.ERROR_MESSAGE);
        } else if (telefono.getText().length() < 10)
        {
            JOptionPane.showMessageDialog(rootPane, "Su telefono tiene menos de 10 digitos ", "Menos numeros", JOptionPane.ERROR_MESSAGE);
        } else if (Integer.parseInt(String.valueOf(telefono.getText().charAt(0))) != 0 && Integer.parseInt(String.valueOf(telefono.getText().charAt(1))) != 9)
        {
            JOptionPane.showMessageDialog(rootPane, "Su telefono tiene que ser celular ", "Telefono no valido", JOptionPane.ERROR_MESSAGE);
        } else
        {
            // Trae el indice de la lista del Producto
            int j = tablita.getSelectedRow();
            // Obtengo el Producto
            Cliente productoActualizar = clientes.get(j);
            productoActualizar.setCedula(cedula.getText());
            productoActualizar.setNombre(nombre.getText());
            productoActualizar.setTelefono(telefono.getText());
            productoActualizar.setDireccion(nombre.getText());
            limpiar();

            estado = "crear";
            tablita.setEnabled(true);
        }

        // Este metodo nos permite refrescar la tabla
        listar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cedulaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cedulaKeyReleased
        if (cedula.getText().equals("-"))
        {
            cedula.setText(null);
            getToolkit().beep();
            evt.consume();
        }

    }//GEN-LAST:event_cedulaKeyReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Se obtiene el indice del cliete seleccionado
        int j = tablita.getSelectedRow();
        if (j > -1)
        {
            // Elimina de la lista el cliente
            clientes.remove(j);
            // refresca la tabla
            this.listar();
        } else
        {
            // Error en el caso de que no haya seleccionado un cliente
            JOptionPane.showMessageDialog(rootPane, "Elija un Cliente", "Cliente no seleccionado", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void cedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cedulaKeyTyped
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar))
        {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar solo numeros");
        }

        if (cedula.getText().length() >= 10)
        {
            getToolkit().beep();
            evt.consume();
        }
        int press = evt.getKeyChar();
        if (press == 10)
        {
            String cedulaencontrada = String.valueOf(cedula.getText().trim());
            Cliente c;
            modeloTabla.setRowCount(0);
            Object[] datos = new Object[tablita.getColumnCount()];
            for (int i = 0; i < clientes.size(); i++)
            {
                c = (Cliente) clientes.get(i);
                if (cedulaencontrada.equalsIgnoreCase(String.valueOf(c.getCedula())))
                {

                    tablita.removeAll();
                    datos[0]=c.getCedula();
                    datos[1] = c.getNombre();
                    datos[2] = String.valueOf(c.getTelefono());
                    datos[3] = c.getDireccion();
                    modeloTabla.addRow(datos);

                    buscar = i;
                    jButton4.setVisible(false);
                    break;

                }
            }
        }
    }//GEN-LAST:event_cedulaKeyTyped

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        tablita.setEnabled(false);
        // Trae el indice de la lista del Producto
        int j = tablita.getSelectedRow();
        if (j > -1)
        {
            // Obtengo el Producto
            Cliente productoActualizar = clientes.get(j);
            // Se pone los valores en los TextInputs
            cedula.setText(productoActualizar.getCedula());
            nombre.setText(productoActualizar.getNombre());
            telefono.setText(productoActualizar.getTelefono());
            direccion.setText(productoActualizar.getDireccion());

            estado = "actualizar";
            limpiar();
        } else
        {
            // Error en el caso de que no haya seleccionado un producto
            JOptionPane.showMessageDialog(rootPane, "Elija un Producto", "Producto no seleccionado", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaActionPerformed

    private void telefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telefonoKeyTyped
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar))
        {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar solo numeros");
        }

        if (telefono.getText().length() >= 10)
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_telefonoKeyTyped

    private void telefonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telefonoKeyReleased
        if (telefono.getText().equals("-") || telefono.getText().equals("*") || telefono.getText().equals("/"))
        {
            telefono.setText(null);
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_telefonoKeyReleased

    private void nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreKeyTyped
        char validar = evt.getKeyChar();
        if (Character.isDigit(validar))
        {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar solo letras");
        }
    }//GEN-LAST:event_nombreKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        InterfazVentas p = new InterfazVentas();
        p.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        tablita.removeAll();
        jButton4.setVisible(true);
        listar();
        limpiar();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(InterfazCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(InterfazCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(InterfazCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(InterfazCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cedula;
    private javax.swing.JTextField direccion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombre;
    private javax.swing.JTable tablita;
    private javax.swing.JTextField telefono;
    // End of variables declaration//GEN-END:variables
}
